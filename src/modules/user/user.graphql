directive @isAuthenticated on FIELD | FIELD_DEFINITION
directive @hasPermission(code: String) on FIELD | FIELD_DEFINITION
type Role {
  _id: ID!
  code: String!
  name: String!
}
type User {
  _id: ID!
  username: String!
  password: String!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  address: String!
  isActive: Boolean!
  isLock: Boolean!
  role: Role!
}

input UserInput {
  username: String!
  password: String!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  address: String!
}
type LoginResponse {
  token: String!
}
input LoginUserInput {
	username: String!
	password: String!
}
type Query {
  hello: String! @isAuthenticated
  users: [User!]! @isAuthenticated
  user(_id: String!): User!
  me: User @isAuthenticated
}
input UpdateUserInput {
  phone: String!
  address: String!
}
type Mutation {
  createUser(input: UserInput!): User! @isAuthenticated
  updateUser(_id: String!, input: UpdateUserInput!): Boolean!
  deleteUser(_id: String!): Boolean!  @hasPermission(code: "DELETE_USER")
  deleteAll: Boolean! @hasPermission(code: "DELETE_USER")
  login(input: LoginUserInput!): LoginResponse! 
  updatePasword(_id: String!, oldPass: String!, newPass: String!): Boolean!
  lockUSer(_id: String!): Boolean! @hasPermission(code: "LOCK_USER")
  setRole(_id: String!, code: String!): Boolean! @hasPermission(code: "ROLE_MANAGE")
}